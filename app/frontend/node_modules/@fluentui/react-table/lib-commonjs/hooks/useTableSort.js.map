{"version":3,"sources":["useTableSort.js"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState } from '@fluentui/react-utilities';\nconst noop = ()=>undefined;\nexport const defaultTableSortState = {\n    getSortDirection: ()=>'ascending',\n    setColumnSort: noop,\n    sort: (rows)=>[\n            ...rows\n        ],\n    sortColumn: undefined,\n    sortDirection: 'ascending',\n    toggleColumnSort: noop\n};\nexport function useTableSort(options) {\n    // False positive, these plugin hooks are intended to be run on every render\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return (tableState)=>useTableSortState(tableState, options);\n}\nexport function useTableSortState(tableState, options) {\n    const { columns } = tableState;\n    const { sortState, defaultSortState, onSortChange } = options;\n    const [sorted, setSorted] = useControllableState({\n        initialState: {\n            sortDirection: 'ascending',\n            sortColumn: undefined\n        },\n        defaultState: defaultSortState,\n        state: sortState\n    });\n    const { sortColumn, sortDirection } = sorted;\n    const toggleColumnSort = (e, columnId)=>{\n        setSorted((s)=>{\n            const newState = {\n                ...s,\n                sortColumn: columnId\n            };\n            if (s.sortColumn === columnId) {\n                newState.sortDirection = s.sortDirection === 'ascending' ? 'descending' : 'ascending';\n            } else {\n                newState.sortDirection = 'ascending';\n            }\n            onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);\n            return newState;\n        });\n    };\n    const setColumnSort = (e, nextSortColumn, nextSortDirection)=>{\n        const newState = {\n            sortColumn: nextSortColumn,\n            sortDirection: nextSortDirection\n        };\n        onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);\n        setSorted(newState);\n    };\n    const sort = (rows)=>{\n        return rows.slice().sort((a, b)=>{\n            const sortColumnDef = columns.find((column)=>column.columnId === sortColumn);\n            if (!(sortColumnDef === null || sortColumnDef === void 0 ? void 0 : sortColumnDef.compare)) {\n                return 0;\n            }\n            const mod = sortDirection === 'ascending' ? 1 : -1;\n            return sortColumnDef.compare(a.item, b.item) * mod;\n        });\n    };\n    const getSortDirection = (columnId)=>{\n        return sortColumn === columnId ? sortDirection : undefined;\n    };\n    return {\n        ...tableState,\n        sort: {\n            sort,\n            sortColumn,\n            sortDirection,\n            setColumnSort,\n            toggleColumnSort,\n            getSortDirection\n        }\n    };\n}\n"],"names":["defaultTableSortState","useTableSort","useTableSortState","noop","undefined","getSortDirection","setColumnSort","sort","rows","sortColumn","sortDirection","toggleColumnSort","options","tableState","columns","sortState","defaultSortState","onSortChange","sorted","setSorted","useControllableState","initialState","defaultState","state","e","columnId","s","newState","nextSortColumn","nextSortDirection","slice","a","b","sortColumnDef","find","column","compare","mod","item"],"mappings":";;;;;;;;;;;IAGaA,qBAAqB;eAArBA;;IAUGC,YAAY;eAAZA;;IAKAC,iBAAiB;eAAjBA;;;;iEAlBO;gCACc;AACrC,MAAMC,OAAO,IAAIC;AACV,MAAMJ,wBAAwB;IACjCK,kBAAkB,IAAI;IACtBC,eAAeH;IACfI,MAAM,CAACC,OAAO;eACHA;SACN;IACLC,YAAYL;IACZM,eAAe;IACfC,kBAAkBR;AACtB;AACO,SAASF,aAAaW,OAAO;IAChC,4EAA4E;IAC5E,sDAAsD;IACtD,OAAO,CAACC,aAAaX,kBAAkBW,YAAYD;AACvD;AACO,SAASV,kBAAkBW,UAAU,EAAED,OAAO;IACjD,MAAM,EAAEE,OAAO,EAAE,GAAGD;IACpB,MAAM,EAAEE,SAAS,EAAEC,gBAAgB,EAAEC,YAAY,EAAE,GAAGL;IACtD,MAAM,CAACM,QAAQC,UAAU,GAAGC,IAAAA,oCAAoB,EAAC;QAC7CC,cAAc;YACVX,eAAe;YACfD,YAAYL;QAChB;QACAkB,cAAcN;QACdO,OAAOR;IACX;IACA,MAAM,EAAEN,UAAU,EAAEC,aAAa,EAAE,GAAGQ;IACtC,MAAMP,mBAAmB,CAACa,GAAGC;QACzBN,UAAU,CAACO;YACP,MAAMC,WAAW;gBACb,GAAGD,CAAC;gBACJjB,YAAYgB;YAChB;YACA,IAAIC,EAAEjB,UAAU,KAAKgB,UAAU;gBAC3BE,SAASjB,aAAa,GAAGgB,EAAEhB,aAAa,KAAK,cAAc,eAAe;YAC9E,OAAO;gBACHiB,SAASjB,aAAa,GAAG;YAC7B;YACAO,iBAAiB,QAAQA,iBAAiB,KAAK,IAAI,KAAK,IAAIA,aAAaO,GAAGG;YAC5E,OAAOA;QACX;IACJ;IACA,MAAMrB,gBAAgB,CAACkB,GAAGI,gBAAgBC;QACtC,MAAMF,WAAW;YACblB,YAAYmB;YACZlB,eAAemB;QACnB;QACAZ,iBAAiB,QAAQA,iBAAiB,KAAK,IAAI,KAAK,IAAIA,aAAaO,GAAGG;QAC5ER,UAAUQ;IACd;IACA,MAAMpB,OAAO,CAACC;QACV,OAAOA,KAAKsB,KAAK,GAAGvB,IAAI,CAAC,CAACwB,GAAGC;YACzB,MAAMC,gBAAgBnB,QAAQoB,IAAI,CAAC,CAACC,SAASA,OAAOV,QAAQ,KAAKhB;YACjE,IAAI,CAAEwB,CAAAA,kBAAkB,QAAQA,kBAAkB,KAAK,IAAI,KAAK,IAAIA,cAAcG,OAAO,AAAD,GAAI;gBACxF,OAAO;YACX;YACA,MAAMC,MAAM3B,kBAAkB,cAAc,IAAI,CAAC;YACjD,OAAOuB,cAAcG,OAAO,CAACL,EAAEO,IAAI,EAAEN,EAAEM,IAAI,IAAID;QACnD;IACJ;IACA,MAAMhC,mBAAmB,CAACoB;QACtB,OAAOhB,eAAegB,WAAWf,gBAAgBN;IACrD;IACA,OAAO;QACH,GAAGS,UAAU;QACbN,MAAM;YACFA;YACAE;YACAC;YACAJ;YACAK;YACAN;QACJ;IACJ;AACJ"}