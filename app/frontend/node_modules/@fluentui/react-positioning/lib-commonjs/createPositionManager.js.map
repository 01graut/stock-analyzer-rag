{"version":3,"sources":["createPositionManager.js"],"sourcesContent":["import { computePosition } from '@floating-ui/dom';\nimport { debounce, writeArrowUpdates, writeContainerUpdates } from './utils';\nimport { isHTMLElement } from '@fluentui/react-utilities';\nimport { listScrollParents } from './utils/listScrollParents';\n/**\n * @internal\n * @returns manager that handles positioning out of the react lifecycle\n */ export function createPositionManager(options) {\n    const { container, target, arrow, strategy, middleware, placement, useTransform = true } = options;\n    let isDestroyed = false;\n    if (!target || !container) {\n        return {\n            updatePosition: ()=>undefined,\n            dispose: ()=>undefined\n        };\n    }\n    let isFirstUpdate = true;\n    const scrollParents = new Set();\n    const targetWindow = container.ownerDocument.defaultView;\n    // When the container is first resolved, set position `fixed` to avoid scroll jumps.\n    // Without this scroll jumps can occur when the element is rendered initially and receives focus\n    Object.assign(container.style, {\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        margin: 0\n    });\n    const forceUpdate = ()=>{\n        // debounced update can still occur afterwards\n        // early return to avoid memory leaks\n        if (isDestroyed) {\n            return;\n        }\n        if (isFirstUpdate) {\n            listScrollParents(container).forEach((scrollParent)=>scrollParents.add(scrollParent));\n            if (isHTMLElement(target)) {\n                listScrollParents(target).forEach((scrollParent)=>scrollParents.add(scrollParent));\n            }\n            scrollParents.forEach((scrollParent)=>{\n                scrollParent.addEventListener('scroll', updatePosition, {\n                    passive: true\n                });\n            });\n            isFirstUpdate = false;\n        }\n        Object.assign(container.style, {\n            position: strategy\n        });\n        computePosition(target, container, {\n            placement,\n            middleware,\n            strategy\n        }).then(({ x, y, middlewareData, placement: computedPlacement })=>{\n            // Promise can still resolve after destruction\n            // early return to avoid applying outdated position\n            if (isDestroyed) {\n                return;\n            }\n            writeArrowUpdates({\n                arrow,\n                middlewareData\n            });\n            writeContainerUpdates({\n                container,\n                middlewareData,\n                placement: computedPlacement,\n                coordinates: {\n                    x,\n                    y\n                },\n                lowPPI: ((targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.devicePixelRatio) || 1) <= 1,\n                strategy,\n                useTransform\n            });\n        }).catch((err)=>{\n            // https://github.com/floating-ui/floating-ui/issues/1845\n            // FIXME for node > 14\n            // node 15 introduces promise rejection which means that any components\n            // tests need to be `it('', async () => {})` otherwise there can be race conditions with\n            // JSDOM being torn down before this promise is resolved so globals like `window` and `document` don't exist\n            // Unless all tests that ever use `usePositioning` are turned into async tests, any logging during testing\n            // will actually be counter productive\n            if (process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.error('[usePositioning]: Failed to calculate position', err);\n            }\n        });\n    };\n    const updatePosition = debounce(()=>forceUpdate());\n    const dispose = ()=>{\n        isDestroyed = true;\n        if (targetWindow) {\n            targetWindow.removeEventListener('scroll', updatePosition);\n            targetWindow.removeEventListener('resize', updatePosition);\n        }\n        scrollParents.forEach((scrollParent)=>{\n            scrollParent.removeEventListener('scroll', updatePosition);\n        });\n        scrollParents.clear();\n    };\n    if (targetWindow) {\n        targetWindow.addEventListener('scroll', updatePosition, {\n            passive: true\n        });\n        targetWindow.addEventListener('resize', updatePosition);\n    }\n    // Update the position on initialization\n    updatePosition();\n    return {\n        updatePosition,\n        dispose\n    };\n}\n"],"names":["createPositionManager","options","container","target","arrow","strategy","middleware","placement","useTransform","isDestroyed","updatePosition","undefined","dispose","isFirstUpdate","scrollParents","Set","targetWindow","ownerDocument","defaultView","Object","assign","style","position","left","top","margin","forceUpdate","listScrollParents","forEach","scrollParent","add","isHTMLElement","addEventListener","passive","computePosition","then","x","y","middlewareData","computedPlacement","writeArrowUpdates","writeContainerUpdates","coordinates","lowPPI","devicePixelRatio","catch","err","process","env","NODE_ENV","console","error","debounce","removeEventListener","clear"],"mappings":"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"}