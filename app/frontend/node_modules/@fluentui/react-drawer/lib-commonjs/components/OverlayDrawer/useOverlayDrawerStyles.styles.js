"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    overlayDrawerClassNames: function() {
        return overlayDrawerClassNames;
    },
    useOverlayDrawerStyles_unstable: function() {
        return useOverlayDrawerStyles_unstable;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _react1 = require("@griffel/react");
const _useDrawerBaseStylesstyles = require("../../shared/useDrawerBaseStyles.styles");
const _reactmotionpreview = require("@fluentui/react-motion-preview");
const overlayDrawerClassNames = {
    root: 'fui-OverlayDrawer',
    backdrop: 'fui-OverlayDrawer__backdrop'
};
/**
 * Styles for the root slot
 */ const useDrawerResetStyles = /*#__PURE__*/ (0, _react1.__resetStyles)("rx0pfxe", "r1hp8xng", [
    ".rx0pfxe{overflow-x:hidden;overflow-y:hidden;width:var(--fui-Drawer--size);max-width:100vw;height:auto;max-height:100vh;box-sizing:border-box;display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);position:fixed;top:0;bottom:0;}",
    ".rx0pfxe:focus{outline-style:none;}",
    ".rx0pfxe:focus-visible{outline-style:none;}",
    ".rx0pfxe[data-fui-focus-visible]{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}",
    ".rx0pfxe[data-fui-focus-visible]::after{content:\"\";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:calc(2px * -1);right:calc(2px * -1);bottom:calc(2px * -1);left:calc(2px * -1);}",
    ".r1hp8xng{overflow-x:hidden;overflow-y:hidden;width:var(--fui-Drawer--size);max-width:100vw;height:auto;max-height:100vh;box-sizing:border-box;display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);position:fixed;top:0;bottom:0;}",
    ".r1hp8xng:focus{outline-style:none;}",
    ".r1hp8xng:focus-visible{outline-style:none;}",
    ".r1hp8xng[data-fui-focus-visible]{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}",
    ".r1hp8xng[data-fui-focus-visible]::after{content:\"\";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:calc(2px * -1);left:calc(2px * -1);bottom:calc(2px * -1);right:calc(2px * -1);}"
]);
const useDrawerRootStyles = /*#__PURE__*/ (0, _react1.__styles)({
    start: {
        Bz10aip: "f1d8gkik"
    },
    end: {
        Bz10aip: "f1g0pcr8"
    }
}, {
    d: [
        ".f1d8gkik{transform:translate3D(calc(var(--fui-Drawer--size) * -1), 0, 0);}",
        ".f1g0pcr8{transform:translate3D(calc(var(--fui-Drawer--size) * 1), 0, 0);}"
    ]
});
const useDrawerMotionStyles = /*#__PURE__*/ (0, _react1.__styles)({
    "default": {
        abs64n: "fk73vx1",
        E5pizo: "ff88big",
        Bmy1vo4: "f1neo61",
        Es3by: "f1ytgekk"
    },
    enter: {
        abs64n: "f5p0z4x",
        Bz10aip: "f87uvqx",
        E5pizo: "f10nrhrw"
    }
}, {
    d: [
        ".fk73vx1{opacity:0;}",
        ".ff88big{box-shadow:0px var(--colorTransparentBackground);}",
        ".f1neo61{transition-property:transform,box-shadow,opacity;}",
        ".f1ytgekk{will-change:transform,box-shadow,opacity;}",
        ".f5p0z4x{opacity:1;}",
        ".f87uvqx{transform:translate3D(0, 0, 0);}",
        ".f10nrhrw{box-shadow:var(--shadow64);}"
    ]
});
/**
 * Styles for the backdrop slot
 */ const useBackdropMotionStyles = /*#__PURE__*/ (0, _react1.__styles)({
    "default": {
        abs64n: "fk73vx1",
        Bmy1vo4: "f13u1uyl",
        Bkqvd7p: "f17wnm97",
        Es3by: "f1gqqdtu"
    },
    enter: {
        abs64n: "f5p0z4x"
    }
}, {
    d: [
        ".fk73vx1{opacity:0;}",
        ".f13u1uyl{transition-property:opacity;}",
        ".f17wnm97{transition-timing-function:var(--curveEasyEase);}",
        ".f1gqqdtu{will-change:opacity;}",
        ".f5p0z4x{opacity:1;}"
    ]
});
const useOverlayDrawerStyles_unstable = (state)=>{
    const baseClassNames = (0, _useDrawerBaseStylesstyles.useDrawerBaseClassNames)(state);
    const resetStyles = useDrawerResetStyles();
    const rootStyles = useDrawerRootStyles();
    const durationStyles = (0, _useDrawerBaseStylesstyles.useDrawerDurationStyles)();
    const drawerMotionClassNames = (0, _reactmotionpreview.useMotionClassNames)(state.motion, useDrawerMotionStyles());
    const backdropMotionClassNames = (0, _reactmotionpreview.useMotionClassNames)(state.motion, useBackdropMotionStyles());
    const backdrop = state.root.backdrop;
    state.root.className = (0, _react1.mergeClasses)(overlayDrawerClassNames.root, baseClassNames, resetStyles, rootStyles[state.position], drawerMotionClassNames, state.root.className);
    if (backdrop) {
        backdrop.className = (0, _react1.mergeClasses)(overlayDrawerClassNames.backdrop, backdropMotionClassNames, durationStyles[state.size], backdrop.className);
    }
    return state;
}; //# sourceMappingURL=useOverlayDrawerStyles.styles.js.map
